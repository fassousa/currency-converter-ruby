---
openapi: 3.0.1
info:
  title: Currency Converter API
  version: v1
  description: A RESTful API for currency conversion with real-time exchange rates.
    Supports BRL, USD, EUR, and JPY currencies with secure JWT authentication.
  contact:
    name: API Support
    url: https://github.com/fassousa/currency-converter-ruby
paths:
  "/api/v1/auth":
    post:
      summary: Create a new user account
      tags:
      - Authentication
      parameters: []
      responses:
        '201':
          description: user created
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Signed up successfully
        '422':
          description: invalid request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorResponse"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                      format: email
                      example: user@example.com
                    password:
                      type: string
                      format: password
                      example: password123
                      minLength: 6
                  required:
                  - email
                  - password
              required:
              - user
  "/api/v1/auth/sign_in":
    post:
      summary: Sign in to get JWT token
      tags:
      - Authentication
      parameters: []
      responses:
        '200':
          description: signed in successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Signed in successfully
        '401':
          description: invalid credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid Email or password.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                      format: email
                      example: user@example.com
                    password:
                      type: string
                      format: password
                      example: password123
                  required:
                  - email
                  - password
              required:
              - user
  "/api/v1/auth/sign_out":
    delete:
      summary: Sign out (revoke JWT token)
      tags:
      - Authentication
      security:
      - bearerAuth: []
      responses:
        '200':
          description: signed out successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Signed out successfully
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  "/api/v1/health":
    get:
      summary: Check API health status
      tags:
      - Health
      description: Returns the health status of the API, database, cache, and external
        dependencies
      responses:
        '200':
          description: all services healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: healthy
                  timestamp:
                    type: string
                    format: datetime
                  version:
                    type: string
                    example: 1.0.0
                  checks:
                    type: object
                    properties:
                      database:
                        type: object
                        properties:
                          status:
                            type: string
                            example: healthy
                      cache:
                        type: object
                        properties:
                          status:
                            type: string
                            example: healthy
                      external_api:
                        type: object
                        properties:
                          status:
                            type: string
                            example: healthy
        '503':
          description: one or more services unhealthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: unhealthy
                  timestamp:
                    type: string
                    format: datetime
                  version:
                    type: string
                    example: 1.0.0
                  checks:
                    type: object
                    properties:
                      database:
                        type: object
                        properties:
                          status:
                            type: string
                            example: unhealthy
                          error:
                            type: string
                            example: DB error
  "/api/v1/transactions":
    get:
      summary: List user transactions
      tags:
      - Transactions
      security:
      - bearerAuth: []
      parameters:
      - name: page
        in: query
        required: false
        description: 'Page number for pagination (default: 1)'
        example: 1
        schema:
          type: integer
      - name: per_page
        in: query
        required: false
        description: 'Items per page (default: 20, max: 100)'
        example: 20
        schema:
          type: integer
      responses:
        '200':
          description: transactions retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  transactions:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        from_currency:
                          type: string
                          example: USD
                        to_currency:
                          type: string
                          example: BRL
                        from_value:
                          type: string
                          example: '100.0000'
                        to_value:
                          type: string
                          example: '525.0000'
                        rate:
                          type: string
                          example: '5.25000000'
                        timestamp:
                          type: string
                          format: datetime
                          example: '2025-10-03T12:00:00.000Z'
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      per_page:
                        type: integer
                        example: 20
                      total_pages:
                        type: integer
                        example: 1
                      total_count:
                        type: integer
                        example: 3
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorResponse"
    post:
      summary: Create a currency conversion transaction
      tags:
      - Transactions
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '201':
          description: transaction created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  transaction:
                    type: object
                    properties:
                      id:
                        type: integer
                      from_currency:
                        type: string
                        example: USD
                      to_currency:
                        type: string
                        example: BRL
                      from_value:
                        type: string
                        example: '100.0000'
                      to_value:
                        type: string
                        example: '525.0000'
                      rate:
                        type: string
                        example: '5.25000000'
                      timestamp:
                        type: string
                        format: datetime
                  message:
                    type: string
                    example: Transaction created successfully
        '422':
          description: unsupported currency
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorResponse"
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      type:
                        type: string
                        example: currency_not_supported
                      message:
                        type: string
                        example: Currency 'GBP' is not supported
                      details:
                        type: object
                        properties:
                          currency:
                            type: string
                            example: GBP
                          supported_currencies:
                            type: array
                            items:
                              type: string
                            example:
                            - BRL
                            - USD
                            - EUR
                            - JPY
        '503':
          description: exchange rate service unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      type:
                        type: string
                        example: exchange_rate_unavailable
                      message:
                        type: string
                        example: Currency exchange service returned unexpected status
                      details:
                        type: object
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorResponse"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                from_currency:
                  type: string
                  example: USD
                  description: Source currency code
                  enum:
                  - BRL
                  - USD
                  - EUR
                  - JPY
                to_currency:
                  type: string
                  example: BRL
                  description: Target currency code
                  enum:
                  - BRL
                  - USD
                  - EUR
                  - JPY
                from_value:
                  type: string
                  example: '100.00'
                  description: Amount to convert (must be greater than 0)
              required:
              - from_currency
              - to_currency
              - from_value
servers:
- url: http://localhost:3000
  description: Development server
- url: https://{defaultHost}
  description: Production server
  variables:
    defaultHost:
      default: api.currencyconverter.com
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token obtained from /api/v1/auth/sign_in endpoint
  schemas:
    ErrorResponse:
      type: object
      properties:
        error:
          type: object
          properties:
            type:
              type: string
              example: validation_error
            message:
              type: string
              example: Invalid parameters
            details:
              type: object
